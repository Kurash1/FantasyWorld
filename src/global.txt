new localisation whiterun_generic_crystalline_throne = "Crystalline Throne"

new custom_transpile religious_rebels = {
	foreach $ in religions {
		write_file "common/rebel_types/{$}.txt" = {
			`{$}_rebels` = {
				color = { $:color }
				
				area = nation
				government = theocracy
				religion = $
				defection = none
				defect_delay = 120
				independence = none
				unit_transfer = no
				gfx_type = culture_province
				will_relocate = yes	
				
				resilient = no
				reinforcing = yes
				general = yes
				smart = yes
				
				artillery = 0.0
				infantry = 0.7
				cavalry = 0.3
				
				morale = 1.1

				handle_action_negotiate = yes
				handle_action_stability = yes
				handle_action_build_core = yes
				handle_action_send_missionary = yes		
				
				spawn_chance = {
					factor = 1
					modifier = {
						factor = 0.5
						is_overseas = yes
					}
					modifier = {
						factor = 0.0
						owner = { religion = ROOT }
					}
					modifier = {
						factor = 0.0
						NOT = { religion = $ }
					}
					modifier = {
						factor = 0.001
						tolerance_to_this = 5
					}
					modifier = {
						factor = 0.5
						tolerance_to_this = 2
					}
					modifier = {
						factor = 2000
						has_missionary = yes
					}
					modifier = {
						factor = 2
						NOT = { tolerance_to_this = 1 }
					}
					modifier = {
						factor = 2
						NOT = { tolerance_to_this = -1 }
					}
					modifier = {
						factor = 2
						NOT = { tolerance_to_this = -2 }
					}
				}
			 
				movement_evaluation = {
					factor = 1
					modifier = {
						factor = 0.5
						units_in_province = 1
					}
					modifier = {
						factor = 0.001
						controlled_by = REB
					}
					modifier = {
						factor = 0.0
						religion = $
						owner = { religion = $ }
					}
					modifier = {
						factor = 2.0
						NOT = { religion = $ }
						any_neighbor_province = {
							religion = $
							NOT = { has_province_modifier = "forced_conversion" }
						}
					}
					modifier = {
						factor = 5
						has_missionary = yes
						religion = $
					}
					modifier = {
						factor = 1.5
						unrest = 2
					}
					modifier = {
						factor = 1.5
						unrest = 4
					}
					modifier = {
						factor = 1.5
						unrest = 6
					}
				}
			 
				# Province Scope
				siege_won_trigger = {
					always = yes
				}
				siege_won_effect = {
					custom_tooltip = religious_rebels_seige_effect_tooltip
					hidden_effect = {
						if = {
							limit = {
								OR = {
									religion = $
									is_reformation_center = yes
									owner = { religion = $ }
								}
							}
							add_province_modifier = {
								name = "religious_violence"
								duration = 730
							}
						}
						if = {
							limit = {
								NOT = { religion = $ }
								is_reformation_center = no
								NOT = { owner = { religion = $ } }
							}
							change_religion = $
							add_province_modifier = {
								name = "forced_conversion"
								duration = 730
							}
						}
					}
				}
				
				# Country scope
				can_negotiate_trigger = {
					OR = {
						religion_group = $:religious_group
						dominant_religion = $
					}
				}
				
				# Country scope
				can_enforce_trigger = {
					always = yes
				}
				
				# Localisation for their demands
				demands_description = "catholic_rebels_demand"
				
				# Country Scope	
				demands_enforced_effect = {
					hidden_effect = {
						add_country_modifier = {
							name = just_lost_to_rebels
							duration = 10
							hidden = yes
						}
					}
					if = {
						limit = {
							NOT = { religion_group = $:religious_group }
						}
						add_prestige = -50
						every_owned_province = {
							limit = {
								has_rebel_faction = REB
							}
							add_local_autonomy = 20
						}
					}
					if = {
						limit = {
							religion = $
						}
						add_country_modifier = {
							name = "religious_intolerance_enforced"
							duration = 3650
						}
					}
					if = {
						limit = {
							NOT = { religion = $ }
							dominant_religion = $
						}
						change_religion = $
						force_converted = yes
					}
					if = {
						limit = {
							NOT = { religion = $ }
							NOT = { dominant_religion = $ }
							NOT = { has_country_modifier = heretic_tolerance }
							religion_group = $:religious_group
						}
						add_country_modifier = {
							name = "heretic_tolerance"
							duration = 3650
						}
						add_stability = -1
					}
				}
			}
		}
	}
}
new custom_transpile natives = {
	write_file "common/natives/00_natives.txt" = {
		natives_american_inuit = {
			graphical_culture = inuitgfx
			color = { 0 255 255 }
			icon = 4
			
			unit = nord_infantry
			
			provinces = {
				foreach $ in provinces [
					$:lake == no
					$:sea == no
					$:impassible == no
				] { $ }
			}
		}
	}
}

new define NDefines.NEconomy.LAND_TECH_MERC_MAINTENANCE_IMPACT = 0

new define NDefines.NAI.AI_FORT_PER_DEV_RATIO = 25

new named_effect free_merc_company_list = {
	
}
new effect make_company_professional = {
	args = mercenary_company
	transpile = {
		args:desc += "§JThis Mercenary Company costs no §YArmy Professionalism§! when recruited.§!"
		free_merc_company_list +=! {
			mercenary_company = args
		}
	}
}
on_actions:on_mercenary_recruited += {
	FROM = {
		if [
			ROOT = {
				NOT = {
					OR = { 
						free_merc_company_list
					}
				}
			}
		] {
			add_army_professionalism = -0.05
		}
	}
}

new named_effect fix_blessings = {
	foreach blessing in blessings {
		blessing:ai_will_do +=! {
			modifier = {
				factor = 0
				NOT = {
					blessing:potential
				}
			}
		}
	}
}
new named_effect fix_new_diplo_actions = {
	foreach diplo in diplomatic_actions {
		diplo:trigger +=! {
			if [ai = no] {
				diplo:potential
			}
		}
	}
}

new named_int MAP_WIDTH = 4096
new named_int MAP_HEIGHT = 2816

new script_variable temp = {
	name = "Temporary Variable"
}
new script_variable temp_2 = {
	name = "Temporary Variable"
}

new run_file add_all_idea_groups = {
	type = command
	effect = {
		foreach $ in idea_groups [$:category != national] {
			add_idea_group $:id __ARC.FORCE_END_LINE__
		}
	}
}
new named_effect monuments_for_plebs = {
	foreach $m in great_projects [
		$m:start:name != "Black Mountain"
	] {
		$m:start:history +=! {
			if [NOT = { has_dlc = "Leviathan" }] {
				quick_province_modifier = {
					name = "{$m:name}"
					modifier = {
						$m:tier_1:province_modifier
						$m:tier_1:country_modifier
					}
				}
			}
		}
	}
}

new define NDefines.NEconomy.MAX_BUILDING_SLOTS = 16
new localisation empty_line_tt = "	"
new localisation  HAS_CAPITAL_FORT = "Has a non-influencing fort."
new localisation IDEA_TAKEN_EFFECT = "$EFFECT$"
new localisation IDEA_GROUP_REMOVED_EFFECT = "$EFFECT$"
new custom_icon custom_mechanic_overlay = {
	potential = {
		NOT = {
			open_custom_mechanic
		}
	}
}
new custom_button toggle_custom_mechanic_overlay = {
	tooltip = "Toggle Technology Screen"
	effect = {
		if [has_country_flag = show_technology] {
			clr_country_flag = show_technology
		}
		else {
			set_country_flag = show_technology
		}
	}
}
new localisation HEADER_TECHNOLOGY = "Custom Mechanics"
new event_modifier just_lost_to_rebels = {
	name = "Rebel Victory"
	modifier = { }
}
new event_modifier just_lost_to_revolutionary_rebels = {
	name = "Revolutionary Victory"
	modifier = { }
}
new event_modifier heresy = {
	name = "Heresy"
	modifier = {
		local_manpower_modifier = -0.4
		local_unrest = 2
		local_tax_modifier = -0.33
		local_autonomy = 0.05
	}
}
new event_modifier consolidation_of_power = {
	name = "Consolidation of Power"
	modifier = {
		republican_tradition = -0.1
		global_unrest = -1
	}
}
new event_modifier centralization_modifier = {
	name = "Increased Centralization"
	modifier = {
		global_autonomy = -0.05
		global_unrest = 1
	}
}
new event_modifier embezzled_goods = {
	name = "Embezzled Goods"
	modifier = {
		local_production_efficiency = -0.35
	}
}
new event_modifier revoked_estate_modifier = {
	name = "Local Power Vacuum"
	modifier = {
		local_unrest = 5
	}
}
new event_modifier domain_of_spouses_family = {
	name = "Seat of Strong Aristocrats"
	modifier = {
		local_autonomy = 0.1
		local_missionary_strength = -0.05
		local_unrest = -3
	}
}
new event_modifier home_of_consort = {
	name = "Home of Consort"
	modifier = {
		local_unrest = -3
		local_production_efficiency = 0.1
	}
}
new event_modifier recently_changed_religion_dummy = {
	name = "Recently changed Religion"
	modifier = { }
}
new localisation FE_TUTORIAL = "Fantasy World\nPatch 1.0.0"
new localisation CORE_PAUSED = "ESB Paused"

new localisation mage_general_personality_die_desc = "[GetHerHisCap] magical mastery will be missed by our troops."
new localisation mage_general_personality = "Mage"
new localisation desc_mage_general_personality = ""

new localisation ui_tech_system_title = "Technology System Explanation"
new localisation ui_tech_system_desc = "ESB does not use the vanilla technology system, rather you will be spending most of your mana on Idea Groups. 
	The Mana cost for ideas has been increased.
	Every 50 years you will be given 3 new idea group slots.
	Note that this will also show messages for gaining new technology as we cannot implement it in any other way.
This system was made to allow for players to choose what direction they want their countries to focus on."
new bookmark old_kingdom = {
	name = "Old Kingdom"
	desc = ""
	date = 2500.1.1
	countries = {
		black_mountain
	}
	easy_countries = {
		black_mountain
	}
	center = black_mountain
	default = yes
}
new age revival = {
	name = "Age of Revival"
	desc = "With the closing of the great war between the gods in heaven, the mortal societies slowly recovered."
	start = 2500
	can_start = {
		is_year = 2490
	}
}
new age crusades = {
	name = "Age of Crusades"
	desc = "The Gods are Awoken!

The gods have rested enough, and now they will resume their fighting. Their might reverberates in the mortal world as their faithful engage in continuous crusades."
	start = 2600
	can_start = {
		custom_trigger_tooltip = {
			tooltip = future_update
			always = no
		}
	}
}
new age third_century = {
	name = "Age of Blessings"
	desc = ""
	start = 2700
	can_start = {
		custom_trigger_tooltip = {
			tooltip = future_update
			always = no
		}
	}
}
new age fourth_century = {
	name = "Age of Revolutions"
	desc = ""
	start = 2800
	can_start = {
		custom_trigger_tooltip = {
			tooltip = future_update
			always = no
		}
	}
}
