new country_event cast_spell.2 = {
	title = "Cast a Spell on [spell_target.GetName]"
	desc = "Magicka: [magicka.GetValue]/[max_magicka_var.GetValue]£magicka_icon£
Spell Cost Modifier: [spell_cost_modifier_percent.GetValue]%
Development Modifier: [target_development.GetValue]%"
	picture = court_mage_eventPicture
	
	immediate = {
		hidden_effect = {
			variables:spell_cost_modifier_var:calculate
			variables:spell_cost_modifier_percent:calculate
			
			&target_development &= {
				value = development
				who = event_target:spell_target
			}
			&target_development *= 0.1
			
			foreach $ in spells [$:type == "province"] {
				new script_variable `{$:id}_spell_cost` = {
					name = "{$:name} Cost"
				}
				&`{$:id}_spell_cost` := $:cost
				&`{$:id}_spell_cost` *= spell_cost_modifier_var
				when [$:scaled == yes] {
					&`{$:id}_spell_cost` *= target_development
				}
			}
			
			&target_development *= 100
		}
	}
	options = {
		name = "Back"
		effect = { }
	}
}
new named_effect populate_province_spells = {
	arc_call_1
	foreach $ in spells [$:type == "province"] {
		events:cast_spell.2:options += {
			{
				name = "§Y{$:name}§! [{$:id}_spell_cost.GetValue]£magicka_icon£"
				highlight = yes
				trigger = {
					&magicka >= `{$:id}_spell_cost`
					$:trigger
				}
				effect = {
					&magicka -= `{$:id}_spell_cost`
						
					$:on_cast
				}
				ai_will_do = {
					factor = 0
				}
			}
		}
		events:cast_spell.2:options += {
			{
				name = "{$:name} [{$:id}_spell_cost.GetValue]£magicka_icon£"
				highlight = yes
				trigger = {
					NAND = {
						&magicka >= `{$:id}_spell_cost`
						$:trigger
					}
				}
				effect = {
					new_custom_tooltip = "We cannot cast the spell due to not fulfilling the conditions, but here is what it would do:"
					
					tooltip = {
						&magicka -= `{$:id}_spell_cost`
						
						$:on_cast
					}
				}
				ai_will_do = {
					factor = 0
				}
			}
		}
	}
	events:cast_spell.2:options += { {
		name = "Back"
	} }
	arc_call_2
}
new custom_button cast_spell_province = {
	tooltip = "Cast Spell"
	effect = {
		save_event_target_as = spell_target
		
		FROM = {
			country_event = cast_spell.2
		}
	}
}