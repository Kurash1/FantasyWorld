new effect calculate_local_casters = {
	args = string
	transpile = {
		# Base
		&`{args}_casters` &= `modifier:local_{args}_casters`
		
		# Modifier
		&temp &= `modifier:local_{args}_casters_modifier`
		&temp += prev
		
		# Total
		&`{args}_casters` *= temp
		
		# Move Variables
		owner->&`{args}_casters` += prev
	}
}
new effect calculate_global_casters = {
	args = string
	transpile = {
		&temp &= `modifier:global_{args}_casters_modifier`
		
		every_owned_province = {
			calculate_local_casters = "{args}"
		}
		
		&`employed_{args}_casters` := `{args}_casters`
		&temp &= `modifier:employed_{args}_casters`
		&`employed_{args}_casters` *= temp
		
		&`{args}_casters` .= 0
		&`employed_{args}_casters` .= 0
		
		&`{args}_casting_ability` := `employed_{args}_casters`
		&temp &= `modifier:{args}_casting_ability`
		&`{args}_casting_ability` *= temp
	}
}

new named_effect magic_calculations = {
	calculate_global_casters = arcane
	#calculate_total_casters
	#
	#&magic_weight := 0
	#foreach $ in magic_activities {
	#	&magic_weight += `{$:id}_weight`
	#}
	#
	#foreach $ in magic_activities {
	#	# Calculate Magic Mod
	#	&`{$:id}_mod` &= `modifier:{$:modifier_name}`
	#	
	#	# Calculate Relative Weight
	#	&temp := `{$:id}_weight`
	#	if [&magic_weight == 0] {
	#		&temp := 0
	#	}
	#	else {
	#		&temp /= magic_weight
	#	}
	#	
	#	# Calculate Total amount of mages
	#	&`{$:id}_total` := total_mages
	#	&`{$:id}_total` *= temp
	#	&`{$:id}_total` .= 0
	#	
	#	
	#	# Calculate the final modifier
	#	&`{$:id}_real` := `{$:id}_total`
	#	&temp &= trigger_value:total_development
	#	&`{$:id}_real` /= temp
	#	&`{$:id}_real` *= `{$:id}_mod`
	#	
	#	# Calculate Magic Modifier Difference
	#	&magic_mod := `{$:id}_real`
	#	&temp &= `modifier:{$:id}_power_mod`
	#	&magic_mod -= temp
	#	
	#	# Adjust Magic Modifier
	#	while [&magic_mod > 0] {
	#		`add_government_power` = {
	#			mechanic_type = magic_mechanic
	#			power_type = `{$:id}_power`
	#			value = 0.001
	#		}
	#		&magic_mod -= 0.001
	#	}
	#	while [&magic_mod < 0] {
	#		`add_government_power` = {
	#			mechanic_type = magic_mechanic
	#			power_type = `{$:id}_power`
	#			value = -0.001
	#		}
	#		&magic_mod += 0.001
	#	}
	#}
}

on_initialize += {
	every_country [ai = no] {
		foreach $ in magic_activities {
			&`{$:id}_weight` := $:base_weight
		}
		
		magic_calculations
	}
}
on_actions:on_monthly_pulse += {
	if [ai = no] {
		magic_calculations
	}
}