new country_event cast_spell.1 = {
	title = "Cast a Spell on [spell_target.GetName]"
	desc = "Magicka: [magicka.GetValue]/[max_magicka_var.GetValue]£magicka_icon£
Spell Cost Modifier: [spell_cost_modifier_percent.GetValue]%
Development Modifier: [target_development.GetValue]%"
	picture = court_mage_eventPicture
	
	immediate = {
		hidden_effect = {
			variables:spell_cost_modifier_var:calculate
			variables:spell_cost_modifier_percent:calculate
			
			&target_development &= {
				value = total_development
				who = event_target:spell_target
			}
			&target_development *= 0.01
			
			foreach $ in spells [$:type == "diplomatic"] {
				new script_variable `{$:id}_spell_cost` = {
					name = "{$:name} Cost"
				}
				&`{$:id}_spell_cost` := $:cost
				&`{$:id}_spell_cost` *= spell_cost_modifier_var
				when [$:scaled == yes] {
					&`{$:id}_spell_cost` *= target_development
				}
			}
			
			&target_development *= 100
		}
	}
	options = {
		name = "Back"
		effect = { }
	}
}
new named_effect populate_diplomatic_spells = {
	arc_call_1
	foreach $ in spells [$:type == "diplomatic"] {
		events:cast_spell.1:options += {
			{
				name = "§Y{$:name}§! [{$:id}_spell_cost.GetValue]£magicka_icon£"
				highlight = yes
				trigger = {
					&magicka >= `{$:id}_spell_cost`
					$:trigger
				}
				effect = {
					&magicka -= `{$:id}_spell_cost`
						
					$:on_cast
				}
				ai_will_do = {
					factor = 0
				}
			}
		}
		events:cast_spell.1:options += {
			{
				name = "{$:name} [{$:id}_spell_cost.GetValue]£magicka_icon£"
				highlight = yes
				trigger = {
					NAND = {
						&magicka >= `{$:id}_spell_cost`
						$:trigger
					}
				}
				effect = {
					new_custom_tooltip = "We cannot cast the spell for the following reasons:"
				}
				ai_will_do = {
					factor = 0
				}
			}
		}
	}
	events:cast_spell.1:options += { {
		name = "Back"
	} }
	arc_call_2
}
new diplomatic_action cast_spell = {
	name = "£magicka_icon£ Cast Spell £magicka_icon£"
	title = "£magicka_icon£ Cast Spell £magicka_icon£"
	category = influence
	potential = {
		ai = no
	}
	on_accept = {
		FROM = {
			save_event_target_as = spell_target
		}
		country_event = cast_spell.1
	}
}
